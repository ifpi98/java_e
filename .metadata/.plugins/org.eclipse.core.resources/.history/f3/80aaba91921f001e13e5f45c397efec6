package chap01;

import java.io.PrintWriter;
import java.util.Scanner;

public class BankApplication {
	private static Account[] accountArrayAccounts = new Account[100];
	private static Scanner scanner = new Scanner(System.in);

	public static void main(String[] Args) {
		boolean run = true;
		while (run) {

			System.out.println("-------------------------------------------------------");
			System.out.println("1. 계좌생성 | 2. 계좌목록 | 3. 예금 | 4. 출금 | 5. 종료");

			System.out.println("-------------------------------------------------------");

			System.out.print("선택> ");

			int selectNo = scanner.nextInt();

			if (selectNo == 1) {
				createAccount();
			} else if (selectNo == 2) {
				accountList();
			} else if (selectNo == 3) {
				deposit();
			} else if (selectNo == 4) {
				withdraw();
			} else if (selectNo == 5) {
				run = false;
			}
		}
		System.out.println("프로그램 종료");

	}

	// 계좌생성하기
	private static void createAccount() {
		System.out.println("--------");
		System.out.println("계좌생성");
		System.out.println("--------");
		System.out.print("계좌번호: ");
		String ano = scanner.next();

		System.out.print("계좌주: ");
		String owner = scanner.next();

		System.out.print("초기입금액: ");
		int money = scanner.nextInt();

		for (int i = 0; i < accountArrayAccounts.length; i++) {
			if (accountArrayAccounts[i] == null) {
				accountArrayAccounts[i] = new Account(ano, owner, money);
				System.out.println("결과: 계좌가 생성되었습니다.");
				break;
			}
		}
	}


	// 계좌목록보기
	private static void accountList() {
		// 작성하기
		for (var i = 0; i < accountArrayAccounts.length;i++) {
			System.out.println(accountArrayAccounts[i]);
		}
		
	}

	// 예금하기
	private static void deposit() {
		if(accountArrayAccounts[0]) {
			int tempBal = accountArrayAccounts[0].getBalance();
			tempBal = tempBal + 10000;
			accountArrayAccounts[0].setBalance(tempBal);
		} else {
			System.out.println("계좌가 존재하지 않습니다.");
		}
	}

	// 출금하기
	private static void withdraw() {
		if(accountArrayAccounts[0].getBalance() >= 10000) {
			int tempBal = accountArrayAccounts[0].getBalance();
			tempBal = tempBal - 10000;
			accountArrayAccounts[0].setBalance(tempBal);
		} else if(accountArrayAccounts[0].getBalance() < 10000) {
			System.out.println("잔액이 부족합니다.");
		} else{
			System.out.println("계좌가 존재하지 않습니다.");
		} 
	}

	// Account배열에서 ano와 동일한 Account 객체 찾기
	private static Account findAccount(String ano) {
		// 작성하기
	}

}
